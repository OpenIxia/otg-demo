# topology documentation: http://learn.srlinux.dev/tutorials/programmability/event-handler/oper-group/
name: opergroup
prefix: ""

topology:
  defaults:
    kind: srl
  kinds:
    srl:
      image: ghcr.io/nokia/srlinux:22.3.2
  nodes:
    ### FABRIC ###
    leaf1:
      startup-config: opergroup-lab/configs/leaf1.cfg
      binds:
        - opergroup-lab/opergroup.py:/etc/opt/srlinux/eventmgr/opergroup.py
      labels:
        graph-level: 2
        graph-icon: switch
    leaf2:
      startup-config: opergroup-lab/configs/leaf2.cfg
      labels:
        graph-level: 2
        graph-icon: switch
    leaf3:
      startup-config: opergroup-lab/configs/leaf3.cfg
      labels:
        graph-level: 2
        graph-icon: switch
    leaf4:
      startup-config: opergroup-lab/configs/leaf4.cfg
      labels:
        graph-level: 2
        graph-icon: switch
    spine1:
      startup-config: opergroup-lab/configs/spine1.cfg
      labels:
        graph-level: 1
        graph-icon: router
    spine2:
      startup-config: opergroup-lab/configs/spine2.cfg
      labels:
        graph-level: 1
        graph-icon: router
    ### CLIENTS ###
    client1:
      kind: linux
      image: ghcr.io/hellt/network-multitool
      binds:
        - opergroup-lab/configs/bond.sh:/tmp/bond.sh
      exec:
        - bash /tmp/bond.sh
        - ip link set bond0 address 00:c1:ab:00:00:01
        - ip addr add 192.168.100.1/24 dev bond0
      labels:
        graph-level: 3
        graph-icon: server
    client2:
      kind: linux
      image: ghcr.io/hellt/network-multitool
      binds:
        - opergroup-lab/configs/bond.sh:/tmp/bond.sh
      exec:
        - bash /tmp/bond.sh
        - ip link set bond0 address 00:c1:ab:00:00:02
        - ip addr add 192.168.100.2/24 dev bond0
        - iperf3 -s -D > iperf3.log
      labels:
        graph-level: 3
        graph-icon: server

    ### TELEMETRY STACK ###
    gnmic:
      kind: linux
      image: ghcr.io/karimra/gnmic:0.24.4
      binds:
        - opergroup-lab/configs/gnmic.yml:/gnmic.yml:ro
      cmd: --config /gnmic.yml --log subscribe
      labels:
        graph-hide: yes

    prometheus:
      kind: linux
      image: prom/prometheus:v2.23.0
      binds:
        - opergroup-lab/configs/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      cmd: --config.file=/etc/prometheus/prometheus.yml
      ports:
        - 9090:9090
      labels:
        graph-hide: yes

    grafana:
      kind: linux
      image: grafana/grafana:8.5.0
      binds:
        - opergroup-lab/configs/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yaml:ro
        - opergroup-lab/configs/grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yaml:ro
        - opergroup-lab/configs/grafana/dashboards:/var/lib/grafana/dashboards
      ports:
        - 3000:3000
      labels:
        graph-hide: yes

    graphite:
      kind: linux
      image: netreplica/graphite:latest
      env:
        CLAB_SSH_CONNECTION: ${SSH_CONNECTION}
      binds:
        - __clabDir__/topology-data.json:/htdocs/default/default.json:ro
      ports:
        - 8080:80
      exec:
        - sh -c 'graphite_motd.sh 8080'
      labels:
        graph-hide: yes

  links:
    # client1/2 links towards leaves
    - endpoints: ["client1:eth1", "leaf1:e1-1"]
    - endpoints: ["client1:eth2", "leaf2:e1-1"]
    - endpoints: ["client2:eth1", "leaf3:e1-1"]
    - endpoints: ["client2:eth2", "leaf4:e1-1"]
    # leaf-spine links
    ## leaf1
    - endpoints: ["leaf1:e1-49", "spine1:e1-1"]
    - endpoints: ["leaf1:e1-50", "spine2:e1-1"]
    ## leaf2
    - endpoints: ["leaf2:e1-49", "spine1:e1-2"]
    - endpoints: ["leaf2:e1-50", "spine2:e1-2"]
    ## leaf3
    - endpoints: ["leaf3:e1-49", "spine1:e1-3"]
    - endpoints: ["leaf3:e1-50", "spine2:e1-3"]
    ## leaf4
    - endpoints: ["leaf4:e1-49", "spine1:e1-4"]
    - endpoints: ["leaf4:e1-50", "spine2:e1-4"]
